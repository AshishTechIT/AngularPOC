{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nlet ProductService = class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:44431';\n    this.conversionRates = {\n      GBP: 1,\n      USD: 1.24,\n      EUR: 1.14,\n      AUD: 1.92\n    };\n  }\n  getProducts() {\n    return this.http.get(`${this.apiUrl}/products`);\n  }\n  getExchangeRates() {\n    return this.http.get(`${this.apiUrl}/exchangerate`);\n  }\n  getCountries() {\n    return this.http.get(`${this.apiUrl}/country`);\n  }\n  convertPrice(productId, newCurrency, exchangeRate) {\n    const convertUrl = `${this.apiUrl}/products/convertPrice/${productId}?newCurrency=${newCurrency}/exchangeRate=${exchangeRate}`;\n    return this.http.put(convertUrl, {});\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: HttpClient\n  }];\n};\nProductService = __decorate([Injectable({\n  providedIn: 'root'\n})], ProductService);\nexport { ProductService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,SAASC,UAAU,QAAQ,sBAAsB;AAQ1C,IAAMC,cAAc,GAApB,MAAMA,cAAc;EASzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IARhB,WAAM,GAAG,yBAAyB;IAElC,oBAAe,GAAG;MACxBC,GAAG,EAAE,CAAC;MACNC,GAAG,EAAE,IAAI;MACTC,GAAG,EAAE,IAAI;MACTC,GAAG,EAAE;KACN;EACsC;EAEvCC,WAAW;IACT,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAY,GAAG,IAAI,CAACC,MAAM,WAAW,CAAC;EAC5D;EAEAC,gBAAgB;IACd,OAAO,IAAI,CAACR,IAAI,CAACM,GAAG,CAAiB,GAAG,IAAI,CAACC,MAAM,eAAe,CAAC;EACrE;EAEAE,YAAY;IACV,OAAO,IAAI,CAACT,IAAI,CAACM,GAAG,CAAY,GAAG,IAAI,CAACC,MAAM,UAAU,CAAC;EAC3D;EAEAG,YAAY,CAACC,SAAiB,EAAEC,WAAmB,EAAEC,YAAoB;IAEvE,MAAMC,UAAU,GAAG,GAAG,IAAI,CAACP,MAAM,0BAA0BI,SAAS,gBAAgBC,WAAW,iBAAiBC,YAAY,EAAE;IAC9H,OAAO,IAAI,CAACb,IAAI,CAACe,GAAG,CAAUD,UAAU,EAAE,EAAE,CAAC;EAC/C;EAAC;;;;AA3BUhB,cAAc,eAH1BF,UAAU,CAAC;EACVoB,UAAU,EAAE;CACb,CAAC,GACWlB,cAAc,CA6B1B;SA7BYA,cAAc","names":["Injectable","HttpClient","ProductService","constructor","http","GBP","USD","EUR","AUD","getProducts","get","apiUrl","getExchangeRates","getCountries","convertPrice","productId","newCurrency","exchangeRate","convertUrl","put","providedIn"],"sourceRoot":"","sources":["C:\\ASHISH\\AngularTJX\\AngularPOC\\ClientApp\\src\\app\\product\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from '../product.model';\r\nimport { ExchangeRate } from '../exchange.model';\r\nimport { Country } from '../country.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  private apiUrl = 'https://localhost:44431'; \r\n  \r\n  private conversionRates = {\r\n    GBP: 1,\r\n    USD: 1.24,   \r\n    EUR: 1.14,  \r\n    AUD: 1.92\r\n  };\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(`${this.apiUrl}/products`);\r\n  }\r\n\r\n  getExchangeRates(): Observable<ExchangeRate[]> {\r\n    return this.http.get<ExchangeRate[]>(`${this.apiUrl}/exchangerate`);\r\n  }\r\n\r\n  getCountries(): Observable<Country[]> {\r\n    return this.http.get<Country[]>(`${this.apiUrl}/country`);\r\n  }\r\n\r\n  convertPrice(productId: number, newCurrency: string, exchangeRate: number): Observable<Product> {\r\n\r\n    const convertUrl = `${this.apiUrl}/products/convertPrice/${productId}?newCurrency=${newCurrency}/exchangeRate=${exchangeRate}`;\r\n    return this.http.put<Product>(convertUrl, {});\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}