{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:44431/products';\n    this.conversionRates = {\n      GBP: 1,\n      USD: 1.24,\n      EUR: 1.14,\n      AUD: 1.92\n    };\n  }\n  getProducts() {\n    return this.http.get(this.apiUrl);\n  }\n  convertPrice(productId, newCurrency, exchangeRates, countries) {\n    const convertUrl = `${this.apiUrl}/convertPrice/${productId}?newCurrency=${newCurrency}/exchangeRates=${exchangeRates}/countries=${countries}`;\n    return this.http.put(convertUrl, {});\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,cAAc;EASzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IARhB,WAAM,GAAG,kCAAkC;IAE3C,oBAAe,GAAG;MACxBC,GAAG,EAAE,CAAC;MACNC,GAAG,EAAE,IAAI;MACTC,GAAG,EAAE,IAAI;MACTC,GAAG,EAAE;KACN;EACsC;EAEvCC,WAAW;IACT,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAY,IAAI,CAACC,MAAM,CAAC;EAC9C;EAEAC,YAAY,CAACC,SAAiB,EAAEC,WAAmB,EAAEC,aAA6B,EAAEC,SAAoB;IAEtG,MAAMC,UAAU,GAAG,GAAG,IAAI,CAACN,MAAM,iBAAiBE,SAAS,gBAAgBC,WAAW,kBAAkBC,aAAa,cAAcC,SAAS,EAAE;IAC9I,OAAO,IAAI,CAACZ,IAAI,CAACc,GAAG,CAAUD,UAAU,EAAE,EAAE,CAAC;EAC/C;EAAC;qBAnBUf,cAAc;EAAA;EAAA;WAAdA,cAAc;IAAAiB,SAAdjB,cAAc;IAAAkB,YAFb;EAAM","names":["ProductService","constructor","http","GBP","USD","EUR","AUD","getProducts","get","apiUrl","convertPrice","productId","newCurrency","exchangeRates","countries","convertUrl","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\ASHISH\\AngularTJX\\AngularPOC\\ClientApp\\src\\app\\product\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from '../product.model';\r\nimport { ExchangeRate } from '../exchange.model';\r\nimport { Country } from '../country.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  private apiUrl = 'https://localhost:44431/products'; \r\n  \r\n  private conversionRates = {\r\n    GBP: 1,\r\n    USD: 1.24,   \r\n    EUR: 1.14,  \r\n    AUD: 1.92\r\n  };\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.http.get<Product[]>(this.apiUrl);\r\n  }\r\n\r\n  convertPrice(productId: number, newCurrency: string, exchangeRates: ExchangeRate[], countries: Country[]): Observable<Product> {\r\n\r\n    const convertUrl = `${this.apiUrl}/convertPrice/${productId}?newCurrency=${newCurrency}/exchangeRates=${exchangeRates}/countries=${countries}`;\r\n    return this.http.put<Product>(convertUrl, {});\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}